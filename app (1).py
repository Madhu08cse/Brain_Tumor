# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-u-50i5Y_XJGA6dDNH4DacIKQ4LDLQC_
"""

#pip install streamlit reportlab pillow

import streamlit as st
from PIL import Image
import os
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.lib.utils import ImageReader
import datetime

# Set up directories
os.makedirs("uploads", exist_ok=True)

def generate_pdf(patient_name, patient_img_path, mri_img_path, diagnosis_result, pdf_path):
    c = canvas.Canvas(pdf_path, pagesize=A4)
    width, height = A4

    c.setFont("Helvetica-Bold", 20)
    c.drawCentredString(width / 2.0, height - 50, "Brain Tumor Detection Report")

    c.setFont("Helvetica", 12)
    c.drawString(50, height - 80, f"Date: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, height - 110, f"Patient Name: {patient_name}")

    # Patient image
    c.drawString(50, height - 140, "Patient Image:")
    c.drawImage(ImageReader(patient_img_path), 50, height - 340, width=150, height=150)

    # MRI image
    c.drawString(300, height - 140, "Brain MRI Image:")
    c.drawImage(ImageReader(mri_img_path), 300, height - 340, width=150, height=150)

    # Diagnosis result
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, height - 370, "Diagnosis Result:")
    text = c.beginText(50, height - 390)
    text.setFont("Helvetica", 11)
    text.setLeading(15)
    for line in diagnosis_result.strip().split("\n"):
        text.textLine(line)
    c.drawText(text)
    c.save()

# ---- Streamlit UI ----
st.title("ðŸ§  Brain Tumor Detection Report Generator")

with st.form("report_form"):
    patient_name = st.text_input("Patient Name")
    patient_email = st.text_input("Patient Email")
    patient_image = st.file_uploader("Upload Patient Photo", type=["jpg", "jpeg", "png"])
    mri_image = st.file_uploader("Upload Brain MRI Image", type=["jpg", "jpeg", "png"])
    submit = st.form_submit_button("Generate Report")

if submit and patient_image and mri_image:
    # Save uploaded images
    patient_img_path = os.path.join("uploads", patient_image.name)
    mri_img_path = os.path.join("uploads", mri_image.name)
    with open(patient_img_path, "wb") as f:
        f.write(patient_image.read())
    with open(mri_img_path, "wb") as f:
        f.write(mri_image.read())

    # Simulate prediction (replace with your ML model output if available)
    diagnosis_result = (
        "No Tumor Detected\n\n"
        "ðŸ§  Brain Health Maintenance Guide:\n"
        "- Eat healthy and stay hydrated\n"
        "- Sleep well, reduce stress\n"
        "- Exercise and engage in mental activities\n"
        "- Get regular health checkups\n"
        "\nNote: This AI report is not a final diagnosis."
    )

    # Generate PDF
    pdf_path = os.path.join("uploads", f"{patient_name.replace(' ', '_')}_report.pdf")
    generate_pdf(patient_name, patient_img_path, mri_img_path, diagnosis_result, pdf_path)

    st.success("âœ… PDF report generated successfully!")
    with open(pdf_path, "rb") as f:
        st.download_button("ðŸ“„ Download Report", f, file_name=os.path.basename(pdf_path))

    # Optional: show images
    col1, col2 = st.columns(2)
    with col1:
        st.image(patient_img_path, caption="Patient Photo", use_column_width=True)
    with col2:
        st.image(mri_img_path, caption="MRI Scan", use_column_width=True)